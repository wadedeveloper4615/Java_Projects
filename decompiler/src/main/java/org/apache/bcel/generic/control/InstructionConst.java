package org.apache.bcel.generic.control;

import org.apache.bcel.enums.InstructionOpCodes;
import org.apache.bcel.generic.*;
import org.apache.bcel.generic.base.ArithmeticInstruction;
import org.apache.bcel.generic.base.ArrayInstruction;
import org.apache.bcel.generic.base.ConversionInstruction;
import org.apache.bcel.generic.base.Instruction;
import org.apache.bcel.generic.base.LocalVariableInstruction;
import org.apache.bcel.generic.base.ReturnInstruction;
import org.apache.bcel.generic.base.StackInstruction;

public final class InstructionConst {
    public static final Instruction NOP = new NOP();
    public static final Instruction ACONST_NULL = new ACONST_NULL();
    public static final Instruction ICONST_M1 = new ICONST(-1);
    public static final Instruction ICONST_0 = new ICONST(0);
    public static final Instruction ICONST_1 = new ICONST(1);
    public static final Instruction ICONST_2 = new ICONST(2);
    public static final Instruction ICONST_3 = new ICONST(3);
    public static final Instruction ICONST_4 = new ICONST(4);
    public static final Instruction ICONST_5 = new ICONST(5);
    public static final Instruction LCONST_0 = new LCONST(0);
    public static final Instruction LCONST_1 = new LCONST(1);
    public static final Instruction FCONST_0 = new FCONST(0);
    public static final Instruction FCONST_1 = new FCONST(1);
    public static final Instruction FCONST_2 = new FCONST(2);
    public static final Instruction DCONST_0 = new DCONST(0);
    public static final Instruction DCONST_1 = new DCONST(1);
    public static final ArrayInstruction IALOAD = new IALOAD();
    public static final ArrayInstruction LALOAD = new LALOAD();
    public static final ArrayInstruction FALOAD = new FALOAD();
    public static final ArrayInstruction DALOAD = new DALOAD();
    public static final ArrayInstruction AALOAD = new AALOAD();
    public static final ArrayInstruction BALOAD = new BALOAD();
    public static final ArrayInstruction CALOAD = new CALOAD();
    public static final ArrayInstruction SALOAD = new SALOAD();
    public static final ArrayInstruction IASTORE = new IASTORE();
    public static final ArrayInstruction LASTORE = new LASTORE();
    public static final ArrayInstruction FASTORE = new FASTORE();
    public static final ArrayInstruction DASTORE = new DASTORE();
    public static final ArrayInstruction AASTORE = new AASTORE();
    public static final ArrayInstruction BASTORE = new BASTORE();
    public static final ArrayInstruction CASTORE = new CASTORE();
    public static final ArrayInstruction SASTORE = new SASTORE();
    public static final StackInstruction POP = new POP();
    public static final StackInstruction POP2 = new POP2();
    public static final StackInstruction DUP = new DUP();
    public static final StackInstruction DUP_X1 = new DUP_X1();
    public static final StackInstruction DUP_X2 = new DUP_X2();
    public static final StackInstruction DUP2 = new DUP2();
    public static final StackInstruction DUP2_X1 = new DUP2_X1();
    public static final StackInstruction DUP2_X2 = new DUP2_X2();
    public static final StackInstruction SWAP = new SWAP();
    public static final ArithmeticInstruction IADD = new IADD();
    public static final ArithmeticInstruction LADD = new LADD();
    public static final ArithmeticInstruction FADD = new FADD();
    public static final ArithmeticInstruction DADD = new DADD();
    public static final ArithmeticInstruction ISUB = new ISUB();
    public static final ArithmeticInstruction LSUB = new LSUB();
    public static final ArithmeticInstruction FSUB = new FSUB();
    public static final ArithmeticInstruction DSUB = new DSUB();
    public static final ArithmeticInstruction IMUL = new IMUL();
    public static final ArithmeticInstruction LMUL = new LMUL();
    public static final ArithmeticInstruction FMUL = new FMUL();
    public static final ArithmeticInstruction DMUL = new DMUL();
    public static final ArithmeticInstruction IDIV = new IDIV();
    public static final ArithmeticInstruction LDIV = new LDIV();
    public static final ArithmeticInstruction FDIV = new FDIV();
    public static final ArithmeticInstruction DDIV = new DDIV();
    public static final ArithmeticInstruction IREM = new IREM();
    public static final ArithmeticInstruction LREM = new LREM();
    public static final ArithmeticInstruction FREM = new FREM();
    public static final ArithmeticInstruction DREM = new DREM();
    public static final ArithmeticInstruction INEG = new INEG();
    public static final ArithmeticInstruction LNEG = new LNEG();
    public static final ArithmeticInstruction FNEG = new FNEG();
    public static final ArithmeticInstruction DNEG = new DNEG();
    public static final ArithmeticInstruction ISHL = new ISHL();
    public static final ArithmeticInstruction LSHL = new LSHL();
    public static final ArithmeticInstruction ISHR = new ISHR();
    public static final ArithmeticInstruction LSHR = new LSHR();
    public static final ArithmeticInstruction IUSHR = new IUSHR();
    public static final ArithmeticInstruction LUSHR = new LUSHR();
    public static final ArithmeticInstruction IAND = new IAND();
    public static final ArithmeticInstruction LAND = new LAND();
    public static final ArithmeticInstruction IOR = new IOR();
    public static final ArithmeticInstruction LOR = new LOR();
    public static final ArithmeticInstruction IXOR = new IXOR();
    public static final ArithmeticInstruction LXOR = new LXOR();
    public static final ConversionInstruction I2L = new I2L();
    public static final ConversionInstruction I2F = new I2F();
    public static final ConversionInstruction I2D = new I2D();
    public static final ConversionInstruction L2I = new L2I();
    public static final ConversionInstruction L2F = new L2F();
    public static final ConversionInstruction L2D = new L2D();
    public static final ConversionInstruction F2I = new F2I();
    public static final ConversionInstruction F2L = new F2L();
    public static final ConversionInstruction F2D = new F2D();
    public static final ConversionInstruction D2I = new D2I();
    public static final ConversionInstruction D2L = new D2L();
    public static final ConversionInstruction D2F = new D2F();
    public static final ConversionInstruction I2B = new I2B();
    public static final ConversionInstruction I2C = new I2C();
    public static final ConversionInstruction I2S = new I2S();
    public static final Instruction LCMP = new LCMP();
    public static final Instruction FCMPL = new FCMPL();
    public static final Instruction FCMPG = new FCMPG();
    public static final Instruction DCMPL = new DCMPL();
    public static final Instruction DCMPG = new DCMPG();
    public static final ReturnInstruction IRETURN = new IRETURN();
    public static final ReturnInstruction LRETURN = new LRETURN();
    public static final ReturnInstruction FRETURN = new FRETURN();
    public static final ReturnInstruction DRETURN = new DRETURN();
    public static final ReturnInstruction ARETURN = new ARETURN();
    public static final ReturnInstruction RETURN = new RETURN();
    public static final Instruction ARRAYLENGTH = new ARRAYLENGTH();
    public static final Instruction ATHROW = new ATHROW();
    public static final Instruction MONITORENTER = new MONITORENTER();
    public static final Instruction MONITOREXIT = new MONITOREXIT();
    public static final LocalVariableInstruction THIS = new ALOAD(0);
    public static final LocalVariableInstruction ALOAD_0 = THIS;
    public static final LocalVariableInstruction ALOAD_1 = new ALOAD(1);
    public static final LocalVariableInstruction ALOAD_2 = new ALOAD(2);
    public static final LocalVariableInstruction ILOAD_0 = new ILOAD(0);
    public static final LocalVariableInstruction ILOAD_1 = new ILOAD(1);
    public static final LocalVariableInstruction ILOAD_2 = new ILOAD(2);
    public static final LocalVariableInstruction ASTORE_0 = new ASTORE(0);
    public static final LocalVariableInstruction ASTORE_1 = new ASTORE(1);
    public static final LocalVariableInstruction ASTORE_2 = new ASTORE(2);
    public static final LocalVariableInstruction ISTORE_0 = new ISTORE(0);
    public static final LocalVariableInstruction ISTORE_1 = new ISTORE(1);
    public static final LocalVariableInstruction ISTORE_2 = new ISTORE(2);
    private static final Instruction[] INSTRUCTIONS = new Instruction[256];
    static {
        INSTRUCTIONS[InstructionOpCodes.NOP.getOpcode()] = NOP;
        INSTRUCTIONS[InstructionOpCodes.ACONST_NULL.getOpcode()] = ACONST_NULL;
        INSTRUCTIONS[InstructionOpCodes.ICONST_M1.getOpcode()] = ICONST_M1;
        INSTRUCTIONS[InstructionOpCodes.ICONST_0.getOpcode()] = ICONST_0;
        INSTRUCTIONS[InstructionOpCodes.ICONST_1.getOpcode()] = ICONST_1;
        INSTRUCTIONS[InstructionOpCodes.ICONST_2.getOpcode()] = ICONST_2;
        INSTRUCTIONS[InstructionOpCodes.ICONST_3.getOpcode()] = ICONST_3;
        INSTRUCTIONS[InstructionOpCodes.ICONST_4.getOpcode()] = ICONST_4;
        INSTRUCTIONS[InstructionOpCodes.ICONST_5.getOpcode()] = ICONST_5;
        INSTRUCTIONS[InstructionOpCodes.LCONST_0.getOpcode()] = LCONST_0;
        INSTRUCTIONS[InstructionOpCodes.LCONST_1.getOpcode()] = LCONST_1;
        INSTRUCTIONS[InstructionOpCodes.FCONST_0.getOpcode()] = FCONST_0;
        INSTRUCTIONS[InstructionOpCodes.FCONST_1.getOpcode()] = FCONST_1;
        INSTRUCTIONS[InstructionOpCodes.FCONST_2.getOpcode()] = FCONST_2;
        INSTRUCTIONS[InstructionOpCodes.DCONST_0.getOpcode()] = DCONST_0;
        INSTRUCTIONS[InstructionOpCodes.DCONST_1.getOpcode()] = DCONST_1;
        INSTRUCTIONS[InstructionOpCodes.IALOAD.getOpcode()] = IALOAD;
        INSTRUCTIONS[InstructionOpCodes.LALOAD.getOpcode()] = LALOAD;
        INSTRUCTIONS[InstructionOpCodes.FALOAD.getOpcode()] = FALOAD;
        INSTRUCTIONS[InstructionOpCodes.DALOAD.getOpcode()] = DALOAD;
        INSTRUCTIONS[InstructionOpCodes.AALOAD.getOpcode()] = AALOAD;
        INSTRUCTIONS[InstructionOpCodes.BALOAD.getOpcode()] = BALOAD;
        INSTRUCTIONS[InstructionOpCodes.CALOAD.getOpcode()] = CALOAD;
        INSTRUCTIONS[InstructionOpCodes.SALOAD.getOpcode()] = SALOAD;
        INSTRUCTIONS[InstructionOpCodes.IASTORE.getOpcode()] = IASTORE;
        INSTRUCTIONS[InstructionOpCodes.LASTORE.getOpcode()] = LASTORE;
        INSTRUCTIONS[InstructionOpCodes.FASTORE.getOpcode()] = FASTORE;
        INSTRUCTIONS[InstructionOpCodes.DASTORE.getOpcode()] = DASTORE;
        INSTRUCTIONS[InstructionOpCodes.AASTORE.getOpcode()] = AASTORE;
        INSTRUCTIONS[InstructionOpCodes.BASTORE.getOpcode()] = BASTORE;
        INSTRUCTIONS[InstructionOpCodes.CASTORE.getOpcode()] = CASTORE;
        INSTRUCTIONS[InstructionOpCodes.SASTORE.getOpcode()] = SASTORE;
        INSTRUCTIONS[InstructionOpCodes.POP.getOpcode()] = POP;
        INSTRUCTIONS[InstructionOpCodes.POP2.getOpcode()] = POP2;
        INSTRUCTIONS[InstructionOpCodes.DUP.getOpcode()] = DUP;
        INSTRUCTIONS[InstructionOpCodes.DUP_X1.getOpcode()] = DUP_X1;
        INSTRUCTIONS[InstructionOpCodes.DUP_X2.getOpcode()] = DUP_X2;
        INSTRUCTIONS[InstructionOpCodes.DUP2.getOpcode()] = DUP2;
        INSTRUCTIONS[InstructionOpCodes.DUP2_X1.getOpcode()] = DUP2_X1;
        INSTRUCTIONS[InstructionOpCodes.DUP2_X2.getOpcode()] = DUP2_X2;
        INSTRUCTIONS[InstructionOpCodes.SWAP.getOpcode()] = SWAP;
        INSTRUCTIONS[InstructionOpCodes.IADD.getOpcode()] = IADD;
        INSTRUCTIONS[InstructionOpCodes.LADD.getOpcode()] = LADD;
        INSTRUCTIONS[InstructionOpCodes.FADD.getOpcode()] = FADD;
        INSTRUCTIONS[InstructionOpCodes.DADD.getOpcode()] = DADD;
        INSTRUCTIONS[InstructionOpCodes.ISUB.getOpcode()] = ISUB;
        INSTRUCTIONS[InstructionOpCodes.LSUB.getOpcode()] = LSUB;
        INSTRUCTIONS[InstructionOpCodes.FSUB.getOpcode()] = FSUB;
        INSTRUCTIONS[InstructionOpCodes.DSUB.getOpcode()] = DSUB;
        INSTRUCTIONS[InstructionOpCodes.IMUL.getOpcode()] = IMUL;
        INSTRUCTIONS[InstructionOpCodes.LMUL.getOpcode()] = LMUL;
        INSTRUCTIONS[InstructionOpCodes.FMUL.getOpcode()] = FMUL;
        INSTRUCTIONS[InstructionOpCodes.DMUL.getOpcode()] = DMUL;
        INSTRUCTIONS[InstructionOpCodes.IDIV.getOpcode()] = IDIV;
        INSTRUCTIONS[InstructionOpCodes.LDIV.getOpcode()] = LDIV;
        INSTRUCTIONS[InstructionOpCodes.FDIV.getOpcode()] = FDIV;
        INSTRUCTIONS[InstructionOpCodes.DDIV.getOpcode()] = DDIV;
        INSTRUCTIONS[InstructionOpCodes.IREM.getOpcode()] = IREM;
        INSTRUCTIONS[InstructionOpCodes.LREM.getOpcode()] = LREM;
        INSTRUCTIONS[InstructionOpCodes.FREM.getOpcode()] = FREM;
        INSTRUCTIONS[InstructionOpCodes.DREM.getOpcode()] = DREM;
        INSTRUCTIONS[InstructionOpCodes.INEG.getOpcode()] = INEG;
        INSTRUCTIONS[InstructionOpCodes.LNEG.getOpcode()] = LNEG;
        INSTRUCTIONS[InstructionOpCodes.FNEG.getOpcode()] = FNEG;
        INSTRUCTIONS[InstructionOpCodes.DNEG.getOpcode()] = DNEG;
        INSTRUCTIONS[InstructionOpCodes.ISHL.getOpcode()] = ISHL;
        INSTRUCTIONS[InstructionOpCodes.LSHL.getOpcode()] = LSHL;
        INSTRUCTIONS[InstructionOpCodes.ISHR.getOpcode()] = ISHR;
        INSTRUCTIONS[InstructionOpCodes.LSHR.getOpcode()] = LSHR;
        INSTRUCTIONS[InstructionOpCodes.IUSHR.getOpcode()] = IUSHR;
        INSTRUCTIONS[InstructionOpCodes.LUSHR.getOpcode()] = LUSHR;
        INSTRUCTIONS[InstructionOpCodes.IAND.getOpcode()] = IAND;
        INSTRUCTIONS[InstructionOpCodes.LAND.getOpcode()] = LAND;
        INSTRUCTIONS[InstructionOpCodes.IOR.getOpcode()] = IOR;
        INSTRUCTIONS[InstructionOpCodes.LOR.getOpcode()] = LOR;
        INSTRUCTIONS[InstructionOpCodes.IXOR.getOpcode()] = IXOR;
        INSTRUCTIONS[InstructionOpCodes.LXOR.getOpcode()] = LXOR;
        INSTRUCTIONS[InstructionOpCodes.I2L.getOpcode()] = I2L;
        INSTRUCTIONS[InstructionOpCodes.I2F.getOpcode()] = I2F;
        INSTRUCTIONS[InstructionOpCodes.I2D.getOpcode()] = I2D;
        INSTRUCTIONS[InstructionOpCodes.L2I.getOpcode()] = L2I;
        INSTRUCTIONS[InstructionOpCodes.L2F.getOpcode()] = L2F;
        INSTRUCTIONS[InstructionOpCodes.L2D.getOpcode()] = L2D;
        INSTRUCTIONS[InstructionOpCodes.F2I.getOpcode()] = F2I;
        INSTRUCTIONS[InstructionOpCodes.F2L.getOpcode()] = F2L;
        INSTRUCTIONS[InstructionOpCodes.F2D.getOpcode()] = F2D;
        INSTRUCTIONS[InstructionOpCodes.D2I.getOpcode()] = D2I;
        INSTRUCTIONS[InstructionOpCodes.D2L.getOpcode()] = D2L;
        INSTRUCTIONS[InstructionOpCodes.D2F.getOpcode()] = D2F;
        INSTRUCTIONS[InstructionOpCodes.I2B.getOpcode()] = I2B;
        INSTRUCTIONS[InstructionOpCodes.I2C.getOpcode()] = I2C;
        INSTRUCTIONS[InstructionOpCodes.I2S.getOpcode()] = I2S;
        INSTRUCTIONS[InstructionOpCodes.LCMP.getOpcode()] = LCMP;
        INSTRUCTIONS[InstructionOpCodes.FCMPL.getOpcode()] = FCMPL;
        INSTRUCTIONS[InstructionOpCodes.FCMPG.getOpcode()] = FCMPG;
        INSTRUCTIONS[InstructionOpCodes.DCMPL.getOpcode()] = DCMPL;
        INSTRUCTIONS[InstructionOpCodes.DCMPG.getOpcode()] = DCMPG;
        INSTRUCTIONS[InstructionOpCodes.IRETURN.getOpcode()] = IRETURN;
        INSTRUCTIONS[InstructionOpCodes.LRETURN.getOpcode()] = LRETURN;
        INSTRUCTIONS[InstructionOpCodes.FRETURN.getOpcode()] = FRETURN;
        INSTRUCTIONS[InstructionOpCodes.DRETURN.getOpcode()] = DRETURN;
        INSTRUCTIONS[InstructionOpCodes.ARETURN.getOpcode()] = ARETURN;
        INSTRUCTIONS[InstructionOpCodes.RETURN.getOpcode()] = RETURN;
        INSTRUCTIONS[InstructionOpCodes.ARRAYLENGTH.getOpcode()] = ARRAYLENGTH;
        INSTRUCTIONS[InstructionOpCodes.ATHROW.getOpcode()] = ATHROW;
        INSTRUCTIONS[InstructionOpCodes.MONITORENTER.getOpcode()] = MONITORENTER;
        INSTRUCTIONS[InstructionOpCodes.MONITOREXIT.getOpcode()] = MONITOREXIT;
    }

    private InstructionConst() {
    }

    public static Instruction getInstruction(final int index) {
        return INSTRUCTIONS[index];
    }
}
